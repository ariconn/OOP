Player class

#video4
class Player:
    def __init__(self,name):
        
        self.name = name
        self.all_cards = []
    
    def remove_one(self):
        return self.all_cards.pop(0)
    
    def add_cards(self,new_cards):
        if type(new_cards) == type([]):
            #list of multiple cards objs
            self.all_cards.extend(new_cards)
        else:
            self.all_cards.append(new_cards)
                
    def __str__(self):
        return f'Player {self.name} has {len(self.all_cards)} cards.'
    
-------------------

new_player = Player ("Jose")

print(new_player)
Player Jose has 0 cards.


new_player.add_cards(mycard)

print(new_player)
Player Jose has 1 cards.


print(new_player)
Player Jose has 1 cards.

print(new_player.all_cards[0])
jack of hearts


new_player.add_cards([mycard,mycard,mycard])

print(new_player)
Player Jose has 4 cards.


new_player.remove_one()
<__main__.Card at 0x2960e01e970>

print(new_player)
Player Jose has 3 cards.

--------------------------------------------------------------

#video 5
GAME LOGIC PARTE 1

