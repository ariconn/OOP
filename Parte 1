# allows programmers to create obj that have methods & attributes

OOP

sintax
class NameOf Class():
    
    def __int__(self,param1,param2):
        self.param1 = param1
        self.param2 = param2
        
    def some_method(self):
        #perform some action
        print(self.param1)
        
# class is the name of a future obj
# from classes we can construct an instance of the obj
# sintax
class Sample():
    pass
   
# ahora vamos a crear atributos

class Dog():
    def __init__(self,breed,name,spots): #aca creo el/los atributo
        
        self.breed = breed #aca defino el atributo
        self.name = name
        self.spots = spots
        
my_dog = Dog(breed='Lab',name='sammy',spots='yes') #aca finalizo dando la raza
my_dog.breed #aca consulto y me responde
my_dog.spots
my_dog.name
